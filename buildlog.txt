# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/ribeyemarrow/METADATA.json /home/travis/build/fontdirectory/ribeyemarrow/builds/build
$ cp -a /home/travis/build/fontdirectory/ribeyemarrow/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/ribeyemarrow/builds/build
$ cp -a /home/travis/build/fontdirectory/ribeyemarrow/FONTLOG.txt /home/travis/build/fontdirectory/ribeyemarrow/builds/build
$ cp -a RibeyeMarrow-Regular.ttf.ttx src/RibeyeMarrow-Regular.otf.ttx src/RibeyeMarrow-Regular-TTF.sfd RibeyeMarrow-Regular.ttf._n_a_m_e.ttx RibeyeMarrow-Regular.ttf.G_D_E_F_.ttx RibeyeMarrow-Regular.ttf.F_F_T_M_.ttx RibeyeMarrow-Regular.ttf.GlyphOrder.ttx RibeyeMarrow-Regular.ttf._p_o_s_t.ttx RibeyeMarrow-Regular.ttf._h_e_a_d.ttx RibeyeMarrow-Regular.ttf.O_S_2f_2.ttx RibeyeMarrow-Regular.ttf._h_h_e_a.ttx RibeyeMarrow-Regular.ttf.G_S_U_B_.ttx RibeyeMarrow-Regular.ttf._p_r_e_p.ttx RibeyeMarrow-Regular.ttf.G_P_O_S_.ttx RibeyeMarrow-Regular.ttf._h_m_t_x.ttx RibeyeMarrow-Regular.ttf._g_l_y_f.ttx RibeyeMarrow-Regular.ttf._m_a_x_p.ttx RibeyeMarrow-Regular.ttf.D_S_I_G_.ttx RibeyeMarrow-Regular.ttf._g_a_s_p.ttx RibeyeMarrow-Regular.ttf._l_o_c_a.ttx RibeyeMarrow-Regular.ttf._c_m_a_p.ttx src/RibeyeMarrow-Regular.otf._n_a_m_e.ttx src/RibeyeMarrow-Regular.otf.C_F_F_.ttx src/RibeyeMarrow-Regular.otf._c_m_a_p.ttx src/RibeyeMarrow-Regular.otf.G_S_U_B_.ttx src/RibeyeMarrow-Regular.otf.G_P_O_S_.ttx src/RibeyeMarrow-Regular.otf.O_S_2f_2.ttx src/RibeyeMarrow-Regular.otf._h_m_t_x.ttx src/RibeyeMarrow-Regular.otf.GlyphOrder.ttx src/RibeyeMarrow-Regular.otf._p_o_s_t.ttx src/RibeyeMarrow-Regular.otf._h_e_a_d.ttx src/RibeyeMarrow-Regular.otf._m_a_x_p.ttx src/RibeyeMarrow-Regular.otf._h_h_e_a.ttx /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.ttf.ttx /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.otf.ttx /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular-TTF.sfd > fontaine.txt
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
$ fontbakery-check.py upstream-ttx RibeyeMarrow-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.ttf.ttx /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx RibeyeMarrow-Regular.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.otf.ttx /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream RibeyeMarrow-Regular-TTF.sfd
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/ribeyemarrow/builds/build /home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.ttx
$ fontbakery-build-font2ttf.py sources/RibeyeMarrow-Regular.otf RibeyeMarrow-Regular.ttf
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language English (US)
 Mac String: Ribeye Marrow
Windows String: RibeyeMarrow-Regular
Scaron's SEAC-like endchar operator is depreciated for Type2
Yacute's SEAC-like endchar operator is depreciated for Type2
Zcaron's SEAC-like endchar operator is depreciated for Type2
Eacute's SEAC-like endchar operator is depreciated for Type2
Ntilde's SEAC-like endchar operator is depreciated for Type2
Odieresis's SEAC-like endchar operator is depreciated for Type2
aacute's SEAC-like endchar operator is depreciated for Type2
acircumflex's SEAC-like endchar operator is depreciated for Type2
atilde's SEAC-like endchar operator is depreciated for Type2
eacute's SEAC-like endchar operator is depreciated for Type2
ecircumflex's SEAC-like endchar operator is depreciated for Type2
iacute's SEAC-like endchar operator is depreciated for Type2
ntilde's SEAC-like endchar operator is depreciated for Type2
oacute's SEAC-like endchar operator is depreciated for Type2
ocircumflex's SEAC-like endchar operator is depreciated for Type2
otilde's SEAC-like endchar operator is depreciated for Type2
uacute's SEAC-like endchar operator is depreciated for Type2
ucircumflex's SEAC-like endchar operator is depreciated for Type2
Agrave's SEAC-like endchar operator is depreciated for Type2
Otilde's SEAC-like endchar operator is depreciated for Type2
ydieresis's SEAC-like endchar operator is depreciated for Type2
Acircumflex's SEAC-like endchar operator is depreciated for Type2
Aacute's SEAC-like endchar operator is depreciated for Type2
Edieresis's SEAC-like endchar operator is depreciated for Type2
Iacute's SEAC-like endchar operator is depreciated for Type2
Idieresis's SEAC-like endchar operator is depreciated for Type2
Oacute's SEAC-like endchar operator is depreciated for Type2
Ograve's SEAC-like endchar operator is depreciated for Type2
Amacron's SEAC-like endchar operator is depreciated for Type2
Cacute's SEAC-like endchar operator is depreciated for Type2
Cdotaccent's SEAC-like endchar operator is depreciated for Type2
Dcaron's SEAC-like endchar operator is depreciated for Type2
Emacron's SEAC-like endchar operator is depreciated for Type2
Edotaccent's SEAC-like endchar operator is depreciated for Type2
Gcircumflex's SEAC-like endchar operator is depreciated for Type2
Gdotaccent's SEAC-like endchar operator is depreciated for Type2
Hcircumflex's SEAC-like endchar operator is depreciated for Type2
Itilde's SEAC-like endchar operator is depreciated for Type2
Ibreve's SEAC-like endchar operator is depreciated for Type2
Jcircumflex's SEAC-like endchar operator is depreciated for Type2
Lacute's SEAC-like endchar operator is depreciated for Type2
Nacute's SEAC-like endchar operator is depreciated for Type2
Ncaron's SEAC-like endchar operator is depreciated for Type2
Omacron's SEAC-like endchar operator is depreciated for Type2
Ohungarumlaut's SEAC-like endchar operator is depreciated for Type2
Racute's SEAC-like endchar operator is depreciated for Type2
Rcaron's SEAC-like endchar operator is depreciated for Type2
Sacute's SEAC-like endchar operator is depreciated for Type2
Utilde's SEAC-like endchar operator is depreciated for Type2
Ubreve's SEAC-like endchar operator is depreciated for Type2
Uhungarumlaut's SEAC-like endchar operator is depreciated for Type2
Wcircumflex's SEAC-like endchar operator is depreciated for Type2
Wacute's SEAC-like endchar operator is depreciated for Type2
Ycircumflex's SEAC-like endchar operator is depreciated for Type2
Zacute's SEAC-like endchar operator is depreciated for Type2
Oslashacute's SEAC-like endchar operator is depreciated for Type2
amacron's SEAC-like endchar operator is depreciated for Type2
cacute's SEAC-like endchar operator is depreciated for Type2
cdotaccent's SEAC-like endchar operator is depreciated for Type2
emacron's SEAC-like endchar operator is depreciated for Type2
edotaccent's SEAC-like endchar operator is depreciated for Type2
gcircumflex's SEAC-like endchar operator is depreciated for Type2
gdotaccent's SEAC-like endchar operator is depreciated for Type2
itilde's SEAC-like endchar operator is depreciated for Type2
ibreve's SEAC-like endchar operator is depreciated for Type2
lacute's SEAC-like endchar operator is depreciated for Type2
nacute's SEAC-like endchar operator is depreciated for Type2
ncaron's SEAC-like endchar operator is depreciated for Type2
omacron's SEAC-like endchar operator is depreciated for Type2
ohungarumlaut's SEAC-like endchar operator is depreciated for Type2
racute's SEAC-like endchar operator is depreciated for Type2
rcaron's SEAC-like endchar operator is depreciated for Type2
sacute's SEAC-like endchar operator is depreciated for Type2
utilde's SEAC-like endchar operator is depreciated for Type2
ubreve's SEAC-like endchar operator is depreciated for Type2
uhungarumlaut's SEAC-like endchar operator is depreciated for Type2
wcircumflex's SEAC-like endchar operator is depreciated for Type2
wacute's SEAC-like endchar operator is depreciated for Type2
ycircumflex's SEAC-like endchar operator is depreciated for Type2
zacute's SEAC-like endchar operator is depreciated for Type2
oslashacute's SEAC-like endchar operator is depreciated for Type2
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf)
strippedname:/home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular-TTF.sfd
Compiling "/home/travis/build/fontdirectory/ribeyemarrow/builds/build/sources/RibeyeMarrow-Regular.ttx" to "/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
strippedname:/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.otf
### Test RibeyeMarrow-Regular.ttf
$ fontbakery-check.py result RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
### Optimize TTF RibeyeMarrow-Regular.ttf
$ ls -l 'RibeyeMarrow-Regular.ttf'* # look at the size savings of that subset process
RibeyeMarrow-Regular.ttf.opt: 85020 bytes
RibeyeMarrow-Regular.ttf: 97220 bytes
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.opt /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
### Autohint TTFs (ttfautohint) RibeyeMarrow-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf '/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf: 85020 bytes
/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.autohint.ttf: 129672 bytes
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.autohint.ttf /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
### Subset TTFs (pyftsubset) RibeyeMarrow-Regular.ttf
$ pyftsubset RibeyeMarrow-Regular.latin
$ pyftsubset RibeyeMarrow-Regular.menu
strippedname:/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
spaceWidth is    300
nbspWidth is     300
Nothing to do
$ fontbakery-build-font2ttf.py sources/RibeyeMarrow-Regular-TTF.sfd RibeyeMarrow-Regular-TTF.ttf
Internal Error: Invalid 2nd order spline in SplineRefigure2
Internal Error: Invalid 2nd order spline in SplineRefigure2
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf)
### Test RibeyeMarrow-Regular-TTF.ttf
$ fontbakery-check.py result RibeyeMarrow-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular.ttf /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
Parameter              RibeyeMarrow-Regular.ttf    RibeyeMarrow-Regular-TTF.ttf    
ymax                   1040                        2130                            
hhea.ascent            2130                        2130                            
OS/2.sTypoAscender     2130                        2130                            
OS/2.usWinAscent       2130                        2130                            
ymin                   -326                        -668                            
hhea.descent           -668                        -668                            
OS/2.sTypoDescender    -668                        -668                            
OS/2.usWinDescent      668                         668                             
hhea.lineGap           0                           0                               
OS/2.sTypoLineGap      0                           0                               
hhea total             2798                        2798                            
typo total             2798                        2798                            
win total              2798                        2798                            
UPM:Heights            1000:1366                   2048:2798                       
UPM:Heights %          136 %                       136 %                           


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
### Optimize TTF RibeyeMarrow-Regular-TTF.ttf
$ ls -l 'RibeyeMarrow-Regular-TTF.ttf'* # look at the size savings of that subset process
RibeyeMarrow-Regular-TTF.ttf.opt: 70036 bytes
RibeyeMarrow-Regular-TTF.ttf: 82148 bytes
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) RibeyeMarrow-Regular-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf '/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf: 70036 bytes
/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.autohint.ttf: 102388 bytes
$ mv /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
### Subset TTFs (pyftsubset) RibeyeMarrow-Regular-TTF.ttf
$ pyftsubset RibeyeMarrow-Regular-TTF.latin
$ pyftsubset RibeyeMarrow-Regular-TTF.menu
strippedname:/home/travis/build/fontdirectory/ribeyemarrow/builds/build/RibeyeMarrow-Regular-TTF.ttf
spaceWidth is    614
nbspWidth is     614
Nothing to do
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/ribeyemarrow/builds/build
{} exists
Designer's name from font is: Astigmatic (AOETI)
Original size: 129672\nGzip size: 66069
Family Name: Ribeye Marrow
PS Name: RibeyeMarrow-Regular
Full Name: RibeyeMarrow-Regular
Style: normal
Weight: 400
Filename: RibeyeMarrow-Regular.ttf
Copyright: Copyright (c) 2011 by Brian J. Bonislawsky DBA Astigmatic (AOETI) (astigma@astigmatic.com), with Reserved\rFont Name "Ribeye Marrow"
Family Name: Ribeye Marrow
PS Name: RibeyeMarrow-Regular
Full Name: Ribeye Marrow
Style: normal
Weight: 400
Filename: RibeyeMarrow-Regular-TTF.ttf
Copyright: Copyright (c) 2011 by Brian J. Bonislawsky DBA Astigmatic (AOETI) (astigma@astigmatic.com), with Reserved\nFont Name "Ribeye Marrow"
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): FAIL
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
{
  "name": "Ribeye Marrow", 
  "designer": "Astigmatic", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Display", 
  "size": 45571, 
  "fonts": [
    {
      "name": "Ribeye Marrow", 
      "postScriptName": "RibeyeMarrow-Regular", 
      "fullName": "RibeyeMarrow-Regular", 
      "style": "normal", 
      "weight": 400, 
      "filename": "RibeyeMarrow-Regular.ttf", 
      "copyright": "Copyright (c) 2011 by Brian J. Bonislawsky DBA Astigmatic (AOETI) (astigma@astigmatic.com), with Reserved\rFont Name \"Ribeye Marrow\""
    }, 
    {
      "name": "Ribeye Marrow", 
      "postScriptName": "RibeyeMarrow-Regular", 
      "fullName": "Ribeye Marrow", 
      "style": "normal", 
      "weight": 400, 
      "filename": "RibeyeMarrow-Regular-TTF.ttf", 
      "copyright": "Copyright (c) 2011 by Brian J. Bonislawsky DBA Astigmatic (AOETI) (astigma@astigmatic.com), with Reserved\nFont Name \"Ribeye Marrow\""
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2011-11-23"
}
